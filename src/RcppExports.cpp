// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// Bmsm_filtered_cpp
List Bmsm_filtered_cpp(const arma::mat& dat, const arma::mat& A, const arma::mat& gm, const double& rhoe, const double& sigma1, const double& sigma2);
RcppExport SEXP MSM_Bmsm_filtered_cpp(SEXP datSEXP, SEXP ASEXP, SEXP gmSEXP, SEXP rhoeSEXP, SEXP sigma1SEXP, SEXP sigma2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type dat(datSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type A(ASEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type gm(gmSEXP);
    Rcpp::traits::input_parameter< const double& >::type rhoe(rhoeSEXP);
    Rcpp::traits::input_parameter< const double& >::type sigma1(sigma1SEXP);
    Rcpp::traits::input_parameter< const double& >::type sigma2(sigma2SEXP);
    rcpp_result_gen = Rcpp::wrap(Bmsm_filtered_cpp(dat, A, gm, rhoe, sigma1, sigma2));
    return rcpp_result_gen;
END_RCPP
}
// Bmsm_stage2_ll_cpp
NumericVector Bmsm_stage2_ll_cpp(const arma::mat& dat, const arma::mat& A, const arma::mat& gm, const double& rhoe, const double& sigma1, const double& sigma2);
RcppExport SEXP MSM_Bmsm_stage2_ll_cpp(SEXP datSEXP, SEXP ASEXP, SEXP gmSEXP, SEXP rhoeSEXP, SEXP sigma1SEXP, SEXP sigma2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type dat(datSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type A(ASEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type gm(gmSEXP);
    Rcpp::traits::input_parameter< const double& >::type rhoe(rhoeSEXP);
    Rcpp::traits::input_parameter< const double& >::type sigma1(sigma1SEXP);
    Rcpp::traits::input_parameter< const double& >::type sigma2(sigma2SEXP);
    rcpp_result_gen = Rcpp::wrap(Bmsm_stage2_ll_cpp(dat, A, gm, rhoe, sigma1, sigma2));
    return rcpp_result_gen;
END_RCPP
}
// Msm_likelihood_cpp
List Msm_likelihood_cpp(const arma::mat& pimat0, const arma::mat& omegat, const arma::mat& A);
RcppExport SEXP MSM_Msm_likelihood_cpp(SEXP pimat0SEXP, SEXP omegatSEXP, SEXP ASEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type pimat0(pimat0SEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type omegat(omegatSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type A(ASEXP);
    rcpp_result_gen = Rcpp::wrap(Msm_likelihood_cpp(pimat0, omegat, A));
    return rcpp_result_gen;
END_RCPP
}
// Msm_ll_cpp
NumericVector Msm_ll_cpp(const arma::mat& pimat0, const arma::mat& omegat, const arma::mat& A);
RcppExport SEXP MSM_Msm_ll_cpp(SEXP pimat0SEXP, SEXP omegatSEXP, SEXP ASEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type pimat0(pimat0SEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type omegat(omegatSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type A(ASEXP);
    rcpp_result_gen = Rcpp::wrap(Msm_ll_cpp(pimat0, omegat, A));
    return rcpp_result_gen;
END_RCPP
}
// Msm_smooth_cpp
NumericMatrix Msm_smooth_cpp(const arma::mat& A, const arma::mat& P);
RcppExport SEXP MSM_Msm_smooth_cpp(SEXP ASEXP, SEXP PSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type A(ASEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type P(PSEXP);
    rcpp_result_gen = Rcpp::wrap(Msm_smooth_cpp(A, P));
    return rcpp_result_gen;
END_RCPP
}
